# Makefile.in generated by automake 1.9.6 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/idba
pkglibdir = $(libdir)/idba
pkgincludedir = $(includedir)/idba
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = lib
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libassembly_a_AR = $(AR) $(ARFLAGS)
libassembly_a_LIBADD =
am_libassembly_a_OBJECTS = math.$(OBJEXT) log.$(OBJEXT) \
	blat_record.$(OBJEXT) hash_aligner.$(OBJEXT) \
	options_description.$(OBJEXT) utils.$(OBJEXT) \
	sequence_reader.$(OBJEXT) sequence.$(OBJEXT) \
	sequence_writer.$(OBJEXT) compact_sequence.$(OBJEXT) \
	sequence_io.$(OBJEXT) short_sequence.$(OBJEXT) \
	contig_graph.$(OBJEXT) hash_graph_branch_group.$(OBJEXT) \
	scaffold_graph.$(OBJEXT) contig_info.$(OBJEXT) \
	hash_graph.$(OBJEXT) contig_graph_branch_group.$(OBJEXT) \
	local_assembler.$(OBJEXT) assembly_utility.$(OBJEXT)
libassembly_a_OBJECTS = $(am_libassembly_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libassembly_a_SOURCES)
DIST_SOURCES = $(libassembly_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ypeng/programming/idba-1.1.1-back/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/ypeng/programming/idba-1.1.1-back/missing --run tar
AUTOCONF = ${SHELL} /home/ypeng/programming/idba-1.1.1-back/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ypeng/programming/idba-1.1.1-back/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ypeng/programming/idba-1.1.1-back/missing --run automake-1.9
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ypeng/programming/idba-1.1.1-back/missing --run makeinfo
OBJEXT = o
PACKAGE = idba
PACKAGE_BUGREPORT = ypeng@cs.hku.hk
PACKAGE_NAME = idba
PACKAGE_STRING = idba 1.1.0
PACKAGE_TARNAME = idba
PACKAGE_URL = 
PACKAGE_VERSION = 1.1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.1.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/ypeng/programming/idba-1.1.1-back/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AM_LDFLAGS = -fopenmp -pthread
AM_CXXFLAGS = -Wall -O3 -fopenmp -pthread
INCLUDES = -I$(top_srcdir)/src -I$(top_srcdir)/gtest_src 
libassembly_a_SOURCES = \
	$(top_srcdir)/src/basic/hash.h \
	$(top_srcdir)/src/basic/kmer.h \
	$(top_srcdir)/src/basic/functional.h \
	$(top_srcdir)/src/basic/math.h \
	$(top_srcdir)/src/basic/atomic_integer.h \
	$(top_srcdir)/src/basic/histgram.h \
	$(top_srcdir)/src/basic/math.cpp \
	$(top_srcdir)/src/basic/bit_operation.h \
	$(top_srcdir)/src/basic/pool.h \
	$(top_srcdir)/src/container/hash_set.h \
	$(top_srcdir)/src/container/hash_map.h \
	$(top_srcdir)/src/container/managed_list.h \
	$(top_srcdir)/src/container/hash_table.h \
	$(top_srcdir)/src/misc/log.cpp \
	$(top_srcdir)/src/misc/utils.h \
	$(top_srcdir)/src/misc/blat_record.cpp \
	$(top_srcdir)/src/misc/log.h \
	$(top_srcdir)/src/misc/hash_aligner.cpp \
	$(top_srcdir)/src/misc/blat_record.h \
	$(top_srcdir)/src/misc/options_description.cpp \
	$(top_srcdir)/src/misc/hash_aligner.h \
	$(top_srcdir)/src/misc/utils.cpp \
	$(top_srcdir)/src/misc/options_description.h \
	$(top_srcdir)/src/sequence/sequence.h \
	$(top_srcdir)/src/sequence/sequence_reader.cpp \
	$(top_srcdir)/src/sequence/sequence_writer.h \
	$(top_srcdir)/src/sequence/sequence.cpp \
	$(top_srcdir)/src/sequence/sequence_writer.cpp \
	$(top_srcdir)/src/sequence/compact_sequence.h \
	$(top_srcdir)/src/sequence/read_library.h \
	$(top_srcdir)/src/sequence/compact_sequence.cpp \
	$(top_srcdir)/src/sequence/short_sequence.h \
	$(top_srcdir)/src/sequence/sequence_io.cpp \
	$(top_srcdir)/src/sequence/sequence_io.h \
	$(top_srcdir)/src/sequence/short_sequence.cpp \
	$(top_srcdir)/src/sequence/sequence_reader.h \
	$(top_srcdir)/src/graph/scaffold_graph.h \
	$(top_srcdir)/src/graph/contig_graph.cpp \
	$(top_srcdir)/src/graph/contig_graph.h \
	$(top_srcdir)/src/graph/bit_edges.h \
	$(top_srcdir)/src/graph/hash_graph_branch_group.h \
	$(top_srcdir)/src/graph/hash_graph_branch_group.cpp \
	$(top_srcdir)/src/graph/contig_graph_vertex.h \
	$(top_srcdir)/src/graph/vertex_status.h \
	$(top_srcdir)/src/graph/hash_graph.h \
	$(top_srcdir)/src/graph/contig_graph_path.h \
	$(top_srcdir)/src/graph/contig_graph_branch_group.h \
	$(top_srcdir)/src/graph/scaffold_graph_vertex.h \
	$(top_srcdir)/src/graph/scaffold_graph_path.h \
	$(top_srcdir)/src/graph/hash_graph_path.h \
	$(top_srcdir)/src/graph/scaffold_graph.cpp \
	$(top_srcdir)/src/graph/contig_info.cpp \
	$(top_srcdir)/src/graph/hash_graph.cpp \
	$(top_srcdir)/src/graph/contig_builder.h \
	$(top_srcdir)/src/graph/contig_info.h \
	$(top_srcdir)/src/graph/hash_graph_vertex.h \
	$(top_srcdir)/src/graph/contig_graph_branch_group.cpp \
	$(top_srcdir)/src/assembly/assembly_utility.h \
	$(top_srcdir)/src/assembly/local_assembler.h \
	$(top_srcdir)/src/assembly/local_assembler.cpp \
	$(top_srcdir)/src/assembly/assembly_utility.cpp 

noinst_LIBRARIES = \
	libassembly.a 

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  lib/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libassembly.a: $(libassembly_a_OBJECTS) $(libassembly_a_DEPENDENCIES) 
	-rm -f libassembly.a
	$(libassembly_a_AR) libassembly.a $(libassembly_a_OBJECTS) $(libassembly_a_LIBADD)
	$(RANLIB) libassembly.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/assembly_utility.Po
include ./$(DEPDIR)/blat_record.Po
include ./$(DEPDIR)/compact_sequence.Po
include ./$(DEPDIR)/contig_graph.Po
include ./$(DEPDIR)/contig_graph_branch_group.Po
include ./$(DEPDIR)/contig_info.Po
include ./$(DEPDIR)/hash_aligner.Po
include ./$(DEPDIR)/hash_graph.Po
include ./$(DEPDIR)/hash_graph_branch_group.Po
include ./$(DEPDIR)/local_assembler.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/math.Po
include ./$(DEPDIR)/options_description.Po
include ./$(DEPDIR)/scaffold_graph.Po
include ./$(DEPDIR)/sequence.Po
include ./$(DEPDIR)/sequence_io.Po
include ./$(DEPDIR)/sequence_reader.Po
include ./$(DEPDIR)/sequence_writer.Po
include ./$(DEPDIR)/short_sequence.Po
include ./$(DEPDIR)/utils.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

math.o: $(top_srcdir)/src/basic/math.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT math.o -MD -MP -MF "$(DEPDIR)/math.Tpo" -c -o math.o `test -f '$(top_srcdir)/src/basic/math.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/basic/math.cpp; \
	then mv -f "$(DEPDIR)/math.Tpo" "$(DEPDIR)/math.Po"; else rm -f "$(DEPDIR)/math.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/basic/math.cpp' object='math.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o math.o `test -f '$(top_srcdir)/src/basic/math.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/basic/math.cpp

math.obj: $(top_srcdir)/src/basic/math.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT math.obj -MD -MP -MF "$(DEPDIR)/math.Tpo" -c -o math.obj `if test -f '$(top_srcdir)/src/basic/math.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/basic/math.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/basic/math.cpp'; fi`; \
	then mv -f "$(DEPDIR)/math.Tpo" "$(DEPDIR)/math.Po"; else rm -f "$(DEPDIR)/math.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/basic/math.cpp' object='math.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o math.obj `if test -f '$(top_srcdir)/src/basic/math.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/basic/math.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/basic/math.cpp'; fi`

log.o: $(top_srcdir)/src/misc/log.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT log.o -MD -MP -MF "$(DEPDIR)/log.Tpo" -c -o log.o `test -f '$(top_srcdir)/src/misc/log.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/log.cpp; \
	then mv -f "$(DEPDIR)/log.Tpo" "$(DEPDIR)/log.Po"; else rm -f "$(DEPDIR)/log.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/log.cpp' object='log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o log.o `test -f '$(top_srcdir)/src/misc/log.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/log.cpp

log.obj: $(top_srcdir)/src/misc/log.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT log.obj -MD -MP -MF "$(DEPDIR)/log.Tpo" -c -o log.obj `if test -f '$(top_srcdir)/src/misc/log.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/log.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/log.cpp'; fi`; \
	then mv -f "$(DEPDIR)/log.Tpo" "$(DEPDIR)/log.Po"; else rm -f "$(DEPDIR)/log.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/log.cpp' object='log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o log.obj `if test -f '$(top_srcdir)/src/misc/log.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/log.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/log.cpp'; fi`

blat_record.o: $(top_srcdir)/src/misc/blat_record.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blat_record.o -MD -MP -MF "$(DEPDIR)/blat_record.Tpo" -c -o blat_record.o `test -f '$(top_srcdir)/src/misc/blat_record.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/blat_record.cpp; \
	then mv -f "$(DEPDIR)/blat_record.Tpo" "$(DEPDIR)/blat_record.Po"; else rm -f "$(DEPDIR)/blat_record.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/blat_record.cpp' object='blat_record.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blat_record.o `test -f '$(top_srcdir)/src/misc/blat_record.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/blat_record.cpp

blat_record.obj: $(top_srcdir)/src/misc/blat_record.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blat_record.obj -MD -MP -MF "$(DEPDIR)/blat_record.Tpo" -c -o blat_record.obj `if test -f '$(top_srcdir)/src/misc/blat_record.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/blat_record.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/blat_record.cpp'; fi`; \
	then mv -f "$(DEPDIR)/blat_record.Tpo" "$(DEPDIR)/blat_record.Po"; else rm -f "$(DEPDIR)/blat_record.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/blat_record.cpp' object='blat_record.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blat_record.obj `if test -f '$(top_srcdir)/src/misc/blat_record.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/blat_record.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/blat_record.cpp'; fi`

hash_aligner.o: $(top_srcdir)/src/misc/hash_aligner.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_aligner.o -MD -MP -MF "$(DEPDIR)/hash_aligner.Tpo" -c -o hash_aligner.o `test -f '$(top_srcdir)/src/misc/hash_aligner.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/hash_aligner.cpp; \
	then mv -f "$(DEPDIR)/hash_aligner.Tpo" "$(DEPDIR)/hash_aligner.Po"; else rm -f "$(DEPDIR)/hash_aligner.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/hash_aligner.cpp' object='hash_aligner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_aligner.o `test -f '$(top_srcdir)/src/misc/hash_aligner.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/hash_aligner.cpp

hash_aligner.obj: $(top_srcdir)/src/misc/hash_aligner.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_aligner.obj -MD -MP -MF "$(DEPDIR)/hash_aligner.Tpo" -c -o hash_aligner.obj `if test -f '$(top_srcdir)/src/misc/hash_aligner.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/hash_aligner.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/hash_aligner.cpp'; fi`; \
	then mv -f "$(DEPDIR)/hash_aligner.Tpo" "$(DEPDIR)/hash_aligner.Po"; else rm -f "$(DEPDIR)/hash_aligner.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/hash_aligner.cpp' object='hash_aligner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_aligner.obj `if test -f '$(top_srcdir)/src/misc/hash_aligner.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/hash_aligner.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/hash_aligner.cpp'; fi`

options_description.o: $(top_srcdir)/src/misc/options_description.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT options_description.o -MD -MP -MF "$(DEPDIR)/options_description.Tpo" -c -o options_description.o `test -f '$(top_srcdir)/src/misc/options_description.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/options_description.cpp; \
	then mv -f "$(DEPDIR)/options_description.Tpo" "$(DEPDIR)/options_description.Po"; else rm -f "$(DEPDIR)/options_description.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/options_description.cpp' object='options_description.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o options_description.o `test -f '$(top_srcdir)/src/misc/options_description.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/options_description.cpp

options_description.obj: $(top_srcdir)/src/misc/options_description.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT options_description.obj -MD -MP -MF "$(DEPDIR)/options_description.Tpo" -c -o options_description.obj `if test -f '$(top_srcdir)/src/misc/options_description.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/options_description.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/options_description.cpp'; fi`; \
	then mv -f "$(DEPDIR)/options_description.Tpo" "$(DEPDIR)/options_description.Po"; else rm -f "$(DEPDIR)/options_description.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/options_description.cpp' object='options_description.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o options_description.obj `if test -f '$(top_srcdir)/src/misc/options_description.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/options_description.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/options_description.cpp'; fi`

utils.o: $(top_srcdir)/src/misc/utils.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.o -MD -MP -MF "$(DEPDIR)/utils.Tpo" -c -o utils.o `test -f '$(top_srcdir)/src/misc/utils.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/utils.cpp; \
	then mv -f "$(DEPDIR)/utils.Tpo" "$(DEPDIR)/utils.Po"; else rm -f "$(DEPDIR)/utils.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/utils.cpp' object='utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.o `test -f '$(top_srcdir)/src/misc/utils.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/misc/utils.cpp

utils.obj: $(top_srcdir)/src/misc/utils.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.obj -MD -MP -MF "$(DEPDIR)/utils.Tpo" -c -o utils.obj `if test -f '$(top_srcdir)/src/misc/utils.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/utils.cpp'; fi`; \
	then mv -f "$(DEPDIR)/utils.Tpo" "$(DEPDIR)/utils.Po"; else rm -f "$(DEPDIR)/utils.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/misc/utils.cpp' object='utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.obj `if test -f '$(top_srcdir)/src/misc/utils.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/misc/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/misc/utils.cpp'; fi`

sequence_reader.o: $(top_srcdir)/src/sequence/sequence_reader.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence_reader.o -MD -MP -MF "$(DEPDIR)/sequence_reader.Tpo" -c -o sequence_reader.o `test -f '$(top_srcdir)/src/sequence/sequence_reader.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence_reader.cpp; \
	then mv -f "$(DEPDIR)/sequence_reader.Tpo" "$(DEPDIR)/sequence_reader.Po"; else rm -f "$(DEPDIR)/sequence_reader.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence_reader.cpp' object='sequence_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence_reader.o `test -f '$(top_srcdir)/src/sequence/sequence_reader.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence_reader.cpp

sequence_reader.obj: $(top_srcdir)/src/sequence/sequence_reader.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence_reader.obj -MD -MP -MF "$(DEPDIR)/sequence_reader.Tpo" -c -o sequence_reader.obj `if test -f '$(top_srcdir)/src/sequence/sequence_reader.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence_reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence_reader.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sequence_reader.Tpo" "$(DEPDIR)/sequence_reader.Po"; else rm -f "$(DEPDIR)/sequence_reader.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence_reader.cpp' object='sequence_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence_reader.obj `if test -f '$(top_srcdir)/src/sequence/sequence_reader.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence_reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence_reader.cpp'; fi`

sequence.o: $(top_srcdir)/src/sequence/sequence.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence.o -MD -MP -MF "$(DEPDIR)/sequence.Tpo" -c -o sequence.o `test -f '$(top_srcdir)/src/sequence/sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence.cpp; \
	then mv -f "$(DEPDIR)/sequence.Tpo" "$(DEPDIR)/sequence.Po"; else rm -f "$(DEPDIR)/sequence.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence.cpp' object='sequence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence.o `test -f '$(top_srcdir)/src/sequence/sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence.cpp

sequence.obj: $(top_srcdir)/src/sequence/sequence.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence.obj -MD -MP -MF "$(DEPDIR)/sequence.Tpo" -c -o sequence.obj `if test -f '$(top_srcdir)/src/sequence/sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sequence.Tpo" "$(DEPDIR)/sequence.Po"; else rm -f "$(DEPDIR)/sequence.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence.cpp' object='sequence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence.obj `if test -f '$(top_srcdir)/src/sequence/sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence.cpp'; fi`

sequence_writer.o: $(top_srcdir)/src/sequence/sequence_writer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence_writer.o -MD -MP -MF "$(DEPDIR)/sequence_writer.Tpo" -c -o sequence_writer.o `test -f '$(top_srcdir)/src/sequence/sequence_writer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence_writer.cpp; \
	then mv -f "$(DEPDIR)/sequence_writer.Tpo" "$(DEPDIR)/sequence_writer.Po"; else rm -f "$(DEPDIR)/sequence_writer.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence_writer.cpp' object='sequence_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence_writer.o `test -f '$(top_srcdir)/src/sequence/sequence_writer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence_writer.cpp

sequence_writer.obj: $(top_srcdir)/src/sequence/sequence_writer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence_writer.obj -MD -MP -MF "$(DEPDIR)/sequence_writer.Tpo" -c -o sequence_writer.obj `if test -f '$(top_srcdir)/src/sequence/sequence_writer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence_writer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sequence_writer.Tpo" "$(DEPDIR)/sequence_writer.Po"; else rm -f "$(DEPDIR)/sequence_writer.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence_writer.cpp' object='sequence_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence_writer.obj `if test -f '$(top_srcdir)/src/sequence/sequence_writer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence_writer.cpp'; fi`

compact_sequence.o: $(top_srcdir)/src/sequence/compact_sequence.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compact_sequence.o -MD -MP -MF "$(DEPDIR)/compact_sequence.Tpo" -c -o compact_sequence.o `test -f '$(top_srcdir)/src/sequence/compact_sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/compact_sequence.cpp; \
	then mv -f "$(DEPDIR)/compact_sequence.Tpo" "$(DEPDIR)/compact_sequence.Po"; else rm -f "$(DEPDIR)/compact_sequence.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/compact_sequence.cpp' object='compact_sequence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compact_sequence.o `test -f '$(top_srcdir)/src/sequence/compact_sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/compact_sequence.cpp

compact_sequence.obj: $(top_srcdir)/src/sequence/compact_sequence.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compact_sequence.obj -MD -MP -MF "$(DEPDIR)/compact_sequence.Tpo" -c -o compact_sequence.obj `if test -f '$(top_srcdir)/src/sequence/compact_sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/compact_sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/compact_sequence.cpp'; fi`; \
	then mv -f "$(DEPDIR)/compact_sequence.Tpo" "$(DEPDIR)/compact_sequence.Po"; else rm -f "$(DEPDIR)/compact_sequence.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/compact_sequence.cpp' object='compact_sequence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compact_sequence.obj `if test -f '$(top_srcdir)/src/sequence/compact_sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/compact_sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/compact_sequence.cpp'; fi`

sequence_io.o: $(top_srcdir)/src/sequence/sequence_io.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence_io.o -MD -MP -MF "$(DEPDIR)/sequence_io.Tpo" -c -o sequence_io.o `test -f '$(top_srcdir)/src/sequence/sequence_io.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence_io.cpp; \
	then mv -f "$(DEPDIR)/sequence_io.Tpo" "$(DEPDIR)/sequence_io.Po"; else rm -f "$(DEPDIR)/sequence_io.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence_io.cpp' object='sequence_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence_io.o `test -f '$(top_srcdir)/src/sequence/sequence_io.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/sequence_io.cpp

sequence_io.obj: $(top_srcdir)/src/sequence/sequence_io.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sequence_io.obj -MD -MP -MF "$(DEPDIR)/sequence_io.Tpo" -c -o sequence_io.obj `if test -f '$(top_srcdir)/src/sequence/sequence_io.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence_io.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence_io.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sequence_io.Tpo" "$(DEPDIR)/sequence_io.Po"; else rm -f "$(DEPDIR)/sequence_io.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/sequence_io.cpp' object='sequence_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sequence_io.obj `if test -f '$(top_srcdir)/src/sequence/sequence_io.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/sequence_io.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/sequence_io.cpp'; fi`

short_sequence.o: $(top_srcdir)/src/sequence/short_sequence.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT short_sequence.o -MD -MP -MF "$(DEPDIR)/short_sequence.Tpo" -c -o short_sequence.o `test -f '$(top_srcdir)/src/sequence/short_sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/short_sequence.cpp; \
	then mv -f "$(DEPDIR)/short_sequence.Tpo" "$(DEPDIR)/short_sequence.Po"; else rm -f "$(DEPDIR)/short_sequence.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/short_sequence.cpp' object='short_sequence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o short_sequence.o `test -f '$(top_srcdir)/src/sequence/short_sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sequence/short_sequence.cpp

short_sequence.obj: $(top_srcdir)/src/sequence/short_sequence.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT short_sequence.obj -MD -MP -MF "$(DEPDIR)/short_sequence.Tpo" -c -o short_sequence.obj `if test -f '$(top_srcdir)/src/sequence/short_sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/short_sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/short_sequence.cpp'; fi`; \
	then mv -f "$(DEPDIR)/short_sequence.Tpo" "$(DEPDIR)/short_sequence.Po"; else rm -f "$(DEPDIR)/short_sequence.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/sequence/short_sequence.cpp' object='short_sequence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o short_sequence.obj `if test -f '$(top_srcdir)/src/sequence/short_sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sequence/short_sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sequence/short_sequence.cpp'; fi`

contig_graph.o: $(top_srcdir)/src/graph/contig_graph.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contig_graph.o -MD -MP -MF "$(DEPDIR)/contig_graph.Tpo" -c -o contig_graph.o `test -f '$(top_srcdir)/src/graph/contig_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/contig_graph.cpp; \
	then mv -f "$(DEPDIR)/contig_graph.Tpo" "$(DEPDIR)/contig_graph.Po"; else rm -f "$(DEPDIR)/contig_graph.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/contig_graph.cpp' object='contig_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contig_graph.o `test -f '$(top_srcdir)/src/graph/contig_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/contig_graph.cpp

contig_graph.obj: $(top_srcdir)/src/graph/contig_graph.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contig_graph.obj -MD -MP -MF "$(DEPDIR)/contig_graph.Tpo" -c -o contig_graph.obj `if test -f '$(top_srcdir)/src/graph/contig_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/contig_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/contig_graph.cpp'; fi`; \
	then mv -f "$(DEPDIR)/contig_graph.Tpo" "$(DEPDIR)/contig_graph.Po"; else rm -f "$(DEPDIR)/contig_graph.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/contig_graph.cpp' object='contig_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contig_graph.obj `if test -f '$(top_srcdir)/src/graph/contig_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/contig_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/contig_graph.cpp'; fi`

hash_graph_branch_group.o: $(top_srcdir)/src/graph/hash_graph_branch_group.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_graph_branch_group.o -MD -MP -MF "$(DEPDIR)/hash_graph_branch_group.Tpo" -c -o hash_graph_branch_group.o `test -f '$(top_srcdir)/src/graph/hash_graph_branch_group.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/hash_graph_branch_group.cpp; \
	then mv -f "$(DEPDIR)/hash_graph_branch_group.Tpo" "$(DEPDIR)/hash_graph_branch_group.Po"; else rm -f "$(DEPDIR)/hash_graph_branch_group.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/hash_graph_branch_group.cpp' object='hash_graph_branch_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_graph_branch_group.o `test -f '$(top_srcdir)/src/graph/hash_graph_branch_group.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/hash_graph_branch_group.cpp

hash_graph_branch_group.obj: $(top_srcdir)/src/graph/hash_graph_branch_group.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_graph_branch_group.obj -MD -MP -MF "$(DEPDIR)/hash_graph_branch_group.Tpo" -c -o hash_graph_branch_group.obj `if test -f '$(top_srcdir)/src/graph/hash_graph_branch_group.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/hash_graph_branch_group.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/hash_graph_branch_group.cpp'; fi`; \
	then mv -f "$(DEPDIR)/hash_graph_branch_group.Tpo" "$(DEPDIR)/hash_graph_branch_group.Po"; else rm -f "$(DEPDIR)/hash_graph_branch_group.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/hash_graph_branch_group.cpp' object='hash_graph_branch_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_graph_branch_group.obj `if test -f '$(top_srcdir)/src/graph/hash_graph_branch_group.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/hash_graph_branch_group.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/hash_graph_branch_group.cpp'; fi`

scaffold_graph.o: $(top_srcdir)/src/graph/scaffold_graph.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scaffold_graph.o -MD -MP -MF "$(DEPDIR)/scaffold_graph.Tpo" -c -o scaffold_graph.o `test -f '$(top_srcdir)/src/graph/scaffold_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/scaffold_graph.cpp; \
	then mv -f "$(DEPDIR)/scaffold_graph.Tpo" "$(DEPDIR)/scaffold_graph.Po"; else rm -f "$(DEPDIR)/scaffold_graph.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/scaffold_graph.cpp' object='scaffold_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scaffold_graph.o `test -f '$(top_srcdir)/src/graph/scaffold_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/scaffold_graph.cpp

scaffold_graph.obj: $(top_srcdir)/src/graph/scaffold_graph.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scaffold_graph.obj -MD -MP -MF "$(DEPDIR)/scaffold_graph.Tpo" -c -o scaffold_graph.obj `if test -f '$(top_srcdir)/src/graph/scaffold_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/scaffold_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/scaffold_graph.cpp'; fi`; \
	then mv -f "$(DEPDIR)/scaffold_graph.Tpo" "$(DEPDIR)/scaffold_graph.Po"; else rm -f "$(DEPDIR)/scaffold_graph.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/scaffold_graph.cpp' object='scaffold_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scaffold_graph.obj `if test -f '$(top_srcdir)/src/graph/scaffold_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/scaffold_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/scaffold_graph.cpp'; fi`

contig_info.o: $(top_srcdir)/src/graph/contig_info.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contig_info.o -MD -MP -MF "$(DEPDIR)/contig_info.Tpo" -c -o contig_info.o `test -f '$(top_srcdir)/src/graph/contig_info.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/contig_info.cpp; \
	then mv -f "$(DEPDIR)/contig_info.Tpo" "$(DEPDIR)/contig_info.Po"; else rm -f "$(DEPDIR)/contig_info.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/contig_info.cpp' object='contig_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contig_info.o `test -f '$(top_srcdir)/src/graph/contig_info.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/contig_info.cpp

contig_info.obj: $(top_srcdir)/src/graph/contig_info.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contig_info.obj -MD -MP -MF "$(DEPDIR)/contig_info.Tpo" -c -o contig_info.obj `if test -f '$(top_srcdir)/src/graph/contig_info.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/contig_info.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/contig_info.cpp'; fi`; \
	then mv -f "$(DEPDIR)/contig_info.Tpo" "$(DEPDIR)/contig_info.Po"; else rm -f "$(DEPDIR)/contig_info.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/contig_info.cpp' object='contig_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contig_info.obj `if test -f '$(top_srcdir)/src/graph/contig_info.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/contig_info.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/contig_info.cpp'; fi`

hash_graph.o: $(top_srcdir)/src/graph/hash_graph.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_graph.o -MD -MP -MF "$(DEPDIR)/hash_graph.Tpo" -c -o hash_graph.o `test -f '$(top_srcdir)/src/graph/hash_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/hash_graph.cpp; \
	then mv -f "$(DEPDIR)/hash_graph.Tpo" "$(DEPDIR)/hash_graph.Po"; else rm -f "$(DEPDIR)/hash_graph.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/hash_graph.cpp' object='hash_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_graph.o `test -f '$(top_srcdir)/src/graph/hash_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/hash_graph.cpp

hash_graph.obj: $(top_srcdir)/src/graph/hash_graph.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_graph.obj -MD -MP -MF "$(DEPDIR)/hash_graph.Tpo" -c -o hash_graph.obj `if test -f '$(top_srcdir)/src/graph/hash_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/hash_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/hash_graph.cpp'; fi`; \
	then mv -f "$(DEPDIR)/hash_graph.Tpo" "$(DEPDIR)/hash_graph.Po"; else rm -f "$(DEPDIR)/hash_graph.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/hash_graph.cpp' object='hash_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_graph.obj `if test -f '$(top_srcdir)/src/graph/hash_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/hash_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/hash_graph.cpp'; fi`

contig_graph_branch_group.o: $(top_srcdir)/src/graph/contig_graph_branch_group.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contig_graph_branch_group.o -MD -MP -MF "$(DEPDIR)/contig_graph_branch_group.Tpo" -c -o contig_graph_branch_group.o `test -f '$(top_srcdir)/src/graph/contig_graph_branch_group.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/contig_graph_branch_group.cpp; \
	then mv -f "$(DEPDIR)/contig_graph_branch_group.Tpo" "$(DEPDIR)/contig_graph_branch_group.Po"; else rm -f "$(DEPDIR)/contig_graph_branch_group.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/contig_graph_branch_group.cpp' object='contig_graph_branch_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contig_graph_branch_group.o `test -f '$(top_srcdir)/src/graph/contig_graph_branch_group.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/graph/contig_graph_branch_group.cpp

contig_graph_branch_group.obj: $(top_srcdir)/src/graph/contig_graph_branch_group.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contig_graph_branch_group.obj -MD -MP -MF "$(DEPDIR)/contig_graph_branch_group.Tpo" -c -o contig_graph_branch_group.obj `if test -f '$(top_srcdir)/src/graph/contig_graph_branch_group.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/contig_graph_branch_group.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/contig_graph_branch_group.cpp'; fi`; \
	then mv -f "$(DEPDIR)/contig_graph_branch_group.Tpo" "$(DEPDIR)/contig_graph_branch_group.Po"; else rm -f "$(DEPDIR)/contig_graph_branch_group.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/graph/contig_graph_branch_group.cpp' object='contig_graph_branch_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contig_graph_branch_group.obj `if test -f '$(top_srcdir)/src/graph/contig_graph_branch_group.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/graph/contig_graph_branch_group.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/graph/contig_graph_branch_group.cpp'; fi`

local_assembler.o: $(top_srcdir)/src/assembly/local_assembler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT local_assembler.o -MD -MP -MF "$(DEPDIR)/local_assembler.Tpo" -c -o local_assembler.o `test -f '$(top_srcdir)/src/assembly/local_assembler.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/local_assembler.cpp; \
	then mv -f "$(DEPDIR)/local_assembler.Tpo" "$(DEPDIR)/local_assembler.Po"; else rm -f "$(DEPDIR)/local_assembler.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/assembly/local_assembler.cpp' object='local_assembler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o local_assembler.o `test -f '$(top_srcdir)/src/assembly/local_assembler.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/local_assembler.cpp

local_assembler.obj: $(top_srcdir)/src/assembly/local_assembler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT local_assembler.obj -MD -MP -MF "$(DEPDIR)/local_assembler.Tpo" -c -o local_assembler.obj `if test -f '$(top_srcdir)/src/assembly/local_assembler.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/local_assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/local_assembler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/local_assembler.Tpo" "$(DEPDIR)/local_assembler.Po"; else rm -f "$(DEPDIR)/local_assembler.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/assembly/local_assembler.cpp' object='local_assembler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o local_assembler.obj `if test -f '$(top_srcdir)/src/assembly/local_assembler.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/local_assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/local_assembler.cpp'; fi`

assembly_utility.o: $(top_srcdir)/src/assembly/assembly_utility.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assembly_utility.o -MD -MP -MF "$(DEPDIR)/assembly_utility.Tpo" -c -o assembly_utility.o `test -f '$(top_srcdir)/src/assembly/assembly_utility.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/assembly_utility.cpp; \
	then mv -f "$(DEPDIR)/assembly_utility.Tpo" "$(DEPDIR)/assembly_utility.Po"; else rm -f "$(DEPDIR)/assembly_utility.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/assembly/assembly_utility.cpp' object='assembly_utility.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assembly_utility.o `test -f '$(top_srcdir)/src/assembly/assembly_utility.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/assembly_utility.cpp

assembly_utility.obj: $(top_srcdir)/src/assembly/assembly_utility.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assembly_utility.obj -MD -MP -MF "$(DEPDIR)/assembly_utility.Tpo" -c -o assembly_utility.obj `if test -f '$(top_srcdir)/src/assembly/assembly_utility.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/assembly_utility.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/assembly_utility.cpp'; fi`; \
	then mv -f "$(DEPDIR)/assembly_utility.Tpo" "$(DEPDIR)/assembly_utility.Po"; else rm -f "$(DEPDIR)/assembly_utility.Tpo"; exit 1; fi
#	source='$(top_srcdir)/src/assembly/assembly_utility.cpp' object='assembly_utility.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assembly_utility.obj `if test -f '$(top_srcdir)/src/assembly/assembly_utility.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/assembly_utility.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/assembly_utility.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
